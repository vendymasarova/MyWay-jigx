type: component.default
children:
  - type: component.view
    options:
      style:
        flex:
          grow: 1
          shrink: 1
          basis: 1
          direction: row
        gap: small
      children:
        - type: component.view
          options:
            style:
              flex: 
                grow: 1
                basis: 2
            children:
              - type: component.button
                options:
                  title: Start over
                  type: secondary
                  onPress: 
                    type: action.action-list
                    options:
                      isSequential: true
                      actions:
                        - type: action.set-state
                          options:
                            state: =@ctx.solution.state.activityIsFinished
                            value: false
                        - type: action.set-state
                          options:
                            state: =@ctx.solution.state.isActivityStarted
                            value: 0
                        - type: action.reset-state
                          options:
                            state: =@ctx.solution.state.activityFinishTime
                        - type: action.reset-state
                          options:
                            state: =@ctx.solution.state.idStrategy
                        - type: action.reset-state
                          options:
                            state: =@ctx.solution.state.activityStartTime
                        - type: action.execute-entities
                          options: 
                            provider: DATA_PROVIDER_DYNAMIC
                            entity: default/steps
                            goBack: stay
                            method: update
                            data: =@ctx.datasources.steps[strategy_id = @ctx.inputs.strategyId].{"id" :id, "isChecked" :0}[]
                        - type: action.execute-entity
                          options:
                            provider: DATA_PROVIDER_DYNAMIC
                            entity: default/strategies
                            method: update
                            goBack: stay
                            data: =@ctx.datasources.strategies[strategy_id = @ctx.inputs.strategyId].{"id" :id, "isDone" :false}[]
                        - type: action.execute-entity
                          options:
                            provider: DATA_PROVIDER_DYNAMIC
                            entity: default/strategies
                            method: update
                            goBack: stay
                            data: =@ctx.datasources.strategies[strategy_id = @ctx.inputs.strategyId].{"id" :id, "isInProgress" :false}
                        - type: action.execute-entities
                          options:
                            provider: DATA_PROVIDER_DYNAMIC
                            goBack: stay
                            entity: default/steps
                            method: update
                            data: =@ctx.datasources.steps.{'id':id,'isRevealed':false}[]
        - type: component.view
          when: =@ctx.inputs.inProgress
          options:
            style:
              flex: 
                grow: 1
                basis: 1
            children:
              - type: component.button
                options:
                  title: Finish
                  type: primary
                  style:
                    isDisabled: =@ctx.inputs.stepsCount != @ctx.inputs.isDoneCount
                  onPress: 
                    type: action.action-list
                    options:
                      isSequential: true
                      actions:
                        - type: action.set-state
                          options:
                            state: =@ctx.solution.state.activityIsFinished
                            value: true
                        - type: action.set-state
                          options:
                            state: =@ctx.solution.state.activityFinishTime
                            value: =$now()
                        - type: action.execute-entity
                          options:
                            provider: DATA_PROVIDER_DYNAMIC
                            entity: default/strategies
                            method: update
                            goBack: stay
                            data: =@ctx.datasources.strategies[strategy_id = @ctx.inputs.strategyId].{"id" :id, "isDone" :true}[]
                        - type: action.execute-entities
                          options: 
                            provider: DATA_PROVIDER_DYNAMIC
                            entity: default/strategies-results
                            method: update
                            goBack: stay
                            data:    
                              id: =$uuid()
                              start: =@ctx.solution.state.activityStartTime
                              end: =@ctx.solution.state.activityFinishTime
                              strategyId: =@ctx.inputs.strategyId
                            onSuccess: 
                              title: Successfully saved
                              description: Your result for this strategy was saved
                        - type: action.execute-entities
                          options:
                            provider: DATA_PROVIDER_DYNAMIC
                            entity: default/strategies
                            method: update
                            goBack: stay
                            data: =@ctx.datasources.strategies[strategy_id = @ctx.inputs.strategyId].{"id" :id, "finishTime" :$fromMillis($toMillis(@ctx.solution.state.activityFinishTime) - $toMillis(@ctx.solution.state.activityStartTime), '[m01]') & ' min. ' & $fromMillis($toMillis(@ctx.solution.state.activityFinishTime) - $toMillis(@ctx.solution.state.activityStartTime), '[s01]') & ' sec.'}[]
                        - type: action.reset-state
                          options:
                            state: =@ctx.solution.state.activityFinishTime
                        - type: action.reset-state
                          options:
                            state: =@ctx.solution.state.idStrategy
                        - type: action.reset-state
                          options:
                            state: =@ctx.solution.state.activityStartTime
                        - type: action.execute-entities
                          options:
                            provider: DATA_PROVIDER_DYNAMIC
                            entity: default/strategies
                            method: update
                            goBack: stay
                            data: =@ctx.datasources.strategies[strategy_id = @ctx.inputs.strategyId].{"id" :id, "isInProgress" :false}
                        - type: action.execute-entities
                          options:
                            provider: DATA_PROVIDER_DYNAMIC
                            goBack: stay
                            entity: default/steps
                            method: update
                            data: =@ctx.datasources.steps.{'id':id,'isRevealed':false}[]