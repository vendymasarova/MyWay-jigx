type: component.default
children:
  - type: component.view
    options:
      style:
        flex: 
          grow: 1
          shrink: 1
          direction: row
        radius: medium
      onPress: 
        type: action.confirm
        when: =@ctx.inputs.todos.hasEmoji = 0 ? true:false
        options:
          isConfirmedAutomatically: false
          onConfirmed: 
            type: action.execute-entity
            options: 
              provider: DATA_PROVIDER_DYNAMIC
              entity: default/todos
              method: delete
              goBack: stay
              data: 
                id: =@ctx.inputs.id
          modal:
            title: Delete todo
            description: Are you sure you want to delete this todo?
            confirm: 'Delete'
            cancel: 'Cancel'
         
      children:
        - type: component.view
          options:
            style:
              flex: 
                grow: 1
                direction: row
              gap: medium
              height: 
                min: 60
              margin: 
                bottom: small
              position: relative
              alignItems: center
              
              background:
                color: color13
              radius: small
            children:
              - type: component.view
                options:
                  style:
                    flex: 
                      grow: 1
                      shrink: 1
                    justifyContent: center
                    alignItems: center
                    height: 60
                    width: 
                      min: 60
                      
                    padding: small
                    radius: small
                    background:
                      color: =@ctx.inputs.todos.type = 'school' ? 'color3':@ctx.inputs.todos.type = 'personal' ? 'color8':'color14'
                  children:
                    - type: component.image
                      when: =@ctx.inputs.todos.hasEmoji = 0 ? true:@ctx.inputs.todos.hasEmoji = null ? true:false
                      options:
                        size:
                          height: 45
                          width: 45
                        resizeMode: contain
                        source:
                          uri:  =@ctx.inputs.todos.image
                    - type: component.text
                      when: =@ctx.inputs.todos.hasEmoji = true ? true:false
                      options:
                        value: =@ctx.inputs.todos.emoji
                        size: large
              - type: component.view
                options:
                  style:
                    flex: 
                      grow: 1
                    width:
                      max: 150
                  children:
                    - type: component.text
                      options:
                        value: =@ctx.inputs.todos.name
                        weight: semi-bold
                        
              - type: component.view
                options:
                  style:
                    position: absolute
                    right: minimal
                    bottom: minimal
                  children:
                    - type: component.form
                      instanceId: checkbox
                      options:
                        isDiscardChangesAlertEnabled: false
                        children:
                          - type: component.checkbox
                            instanceId: todo
                            options:
                              nextProperty: undefined
                              label: ''
                              isRequired: false
                              value: =@ctx.inputs.todos.isChecked
                              isOptionalLabelHidden: true
                              style:
                                isPositive: true
                              onChange: 
                                type: action.execute-entity
                                options:
                                  provider: DATA_PROVIDER_DYNAMIC
                                  entity: default/todos
                                  method: update
                                  goBack: stay
                                  data:
                                    id: =@ctx.inputs.todos.id
                                    isChecked: =@ctx.components.todo.state.value
                  